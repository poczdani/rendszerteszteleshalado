// <auto-generated />
using System;
using CarRent.Data;
using CarRent.Data.Entities;
using CarRental.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRent.Data.Migrations
{
    [DbContext(typeof(CarRentalDbContext))]
    partial class CarRentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("CarRent.Data.Entities.Car", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Brand")
                    .HasColumnType("TEXT");

                b.Property<string>("Model")
                    .HasColumnType("TEXT");

                b.Property<int>("Year")
                    .HasColumnType("INTEGER");

                b.Property<string>("Color")
                    .HasColumnType("TEXT");

                b.Property<int>("DailyPrice")
                    .HasColumnType("INTEGER");

                b.Property<int>("CategoryId")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("CategoryId");

                b.ToTable("Cars");
            });

            modelBuilder.Entity("CarRent.Data.Entities.CarCategory", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("CarCategories");
            });

            modelBuilder.Entity("CarRent.Data.Entities.Rental", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<int>("UserId")
                    .HasColumnType("INTEGER");

                b.Property<int>("CarId")
                    .HasColumnType("INTEGER");

                b.Property<DateTime>("RentStart")
                    .HasColumnType("TEXT");

                b.Property<DateTime>("RentEnd")
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Rentals");
            });

            modelBuilder.Entity("CarRent.Data.Entities.Role", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Roles");
            });

            modelBuilder.Entity("CarRent.Data.Entities.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasColumnType("TEXT");

                b.Property<byte[]>("PasswordHash")
                    .IsRequired()
                    .HasColumnType("BLOB");

                b.Property<byte[]>("PasswordSalt")
                    .IsRequired()
                    .HasColumnType("BLOB");

                b.HasKey("Id");

                b.ToTable("Users");
            });

            modelBuilder.Entity("CarRent.Data.Entities.UserRole", b =>
            {
                b.Property<int>("UserId")
                    .HasColumnType("INTEGER");

                b.Property<int>("RoleId")
                    .HasColumnType("INTEGER");

                b.HasKey("UserId", "RoleId");

                b.HasIndex("RoleId");

                b.ToTable("UserRoles");
            });

            modelBuilder.Entity("CarRent.Data.Entities.Car", b =>
            {
                b.HasOne("CarRent.Data.Entities.CarCategory", "Category")
                    .WithMany("Cars")
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Category");
            });

            modelBuilder.Entity("CarRent.Data.Entities.UserRole", b =>
            {
                b.HasOne("CarRent.Data.Entities.Role", "Role")
                    .WithMany()
                    .HasForeignKey("RoleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("CarRent.Data.Entities.User", "User")
                    .WithMany("Roles")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Role");

                b.Navigation("User");
            });

            modelBuilder.Entity("CarRent.Data.Entities.CarCategory", b =>
            {
                b.Navigation("Cars");
            });

            modelBuilder.Entity("CarRent.Data.Entities.User", b =>
            {
                b.Navigation("Rentals");

                b.Navigation("Roles");
            });
#pragma warning restore 612, 618
        }
    }
}
